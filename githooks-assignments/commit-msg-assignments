#!/bin/bash

# commit-msg-assignments hook: Checks if committer has completed required assignments.

# CONFIGURATION: Set these as environment variables or edit here
# Generate SECUREFLAG_API_TOKEN in https://www.secureflag.com/management/index.html#/settings
SECUREFLAG_API_TOKEN="${SECUREFLAG_API_TOKEN:-}"   # SecureFlag API token

# Assignment requirement flags (set ONE at a time)
# Default to checking initial assignments if no flag is explicitly set
REQUIRE_COMPLETED_INITIAL_ASSIGNMENTS="${REQUIRE_COMPLETED_INITIAL_ASSIGNMENTS:-true}"
REQUIRE_COMPLETED_PENDING_ASSIGNMENTS="${REQUIRE_COMPLETED_PENDING_ASSIGNMENTS:-}"
REQUIRE_NOT_EXPIRED_ASSIGNMENTS="${REQUIRE_NOT_EXPIRED_ASSIGNMENTS:-}"

# Ensure required tools are available
if ! command -v jq &> /dev/null; then
  echo "[secureflag-assignments] WARNING: skipping assignment verification, jq is required but not installed."
  exit 0
fi

# Fail if required config is missing
if [[ -z "$SECUREFLAG_API_TOKEN" ]]; then
  echo "[secureflag-assignments] ERROR: SECUREFLAG_API_TOKEN must be set as an environment variable."
  exit 1
fi

# Check that exactly ONE assignment requirement flag is set
FLAGS_SET=0
ACTIVE_FLAG=""
if [[ -n "$REQUIRE_COMPLETED_INITIAL_ASSIGNMENTS" ]]; then
  FLAGS_SET=$((FLAGS_SET + 1))
  ACTIVE_FLAG="REQUIRE_COMPLETED_INITIAL_ASSIGNMENTS"
fi
if [[ -n "$REQUIRE_COMPLETED_PENDING_ASSIGNMENTS" ]]; then
  FLAGS_SET=$((FLAGS_SET + 1))
  ACTIVE_FLAG="REQUIRE_COMPLETED_PENDING_ASSIGNMENTS"
fi
if [[ -n "$REQUIRE_NOT_EXPIRED_ASSIGNMENTS" ]]; then
  FLAGS_SET=$((FLAGS_SET + 1))
  ACTIVE_FLAG="REQUIRE_NOT_EXPIRED_ASSIGNMENTS"
fi

if [[ $FLAGS_SET -ne 1 ]]; then
  echo "[secureflag-assignments] ERROR: Exactly one assignment requirement flag must be set."
  if [[ $FLAGS_SET -eq 0 ]]; then
    echo "No flags are currently set. Please set one of:"
    echo "  - REQUIRE_COMPLETED_INITIAL_ASSIGNMENTS"
    echo "  - REQUIRE_COMPLETED_PENDING_ASSIGNMENTS"
    echo "  - REQUIRE_NOT_EXPIRED_ASSIGNMENTS"
  else
    echo "Multiple flags are currently set:"
    [[ -n "$REQUIRE_COMPLETED_INITIAL_ASSIGNMENTS" ]] && echo "  - REQUIRE_COMPLETED_INITIAL_ASSIGNMENTS"
    [[ -n "$REQUIRE_COMPLETED_PENDING_ASSIGNMENTS" ]] && echo "  - REQUIRE_COMPLETED_PENDING_ASSIGNMENTS"
    [[ -n "$REQUIRE_NOT_EXPIRED_ASSIGNMENTS" ]] && echo "  - REQUIRE_NOT_EXPIRED_ASSIGNMENTS"
    echo "Please set only one flag at a time."
  fi
  exit 1
fi

# If not set, use git config user.email as committer email
COMMITTER_EMAIL=${COMMITTER_EMAIL:-$(git config user.email)}
if [[ -z "$COMMITTER_EMAIL" ]]; then
  echo "[secureflag-assignments] ERROR: Could not determine committer email from git config."
  exit 1
fi

# Build API request payload based on active flag
PAYLOAD=""
REQUIREMENT_NAME=""
if [[ -n "$REQUIRE_COMPLETED_INITIAL_ASSIGNMENTS" ]]; then
  PAYLOAD="{\"user\":\"$COMMITTER_EMAIL\",\"hasCompletedInitialAssignments\":true}"
  REQUIREMENT_NAME="completed initial assignments"
elif [[ -n "$REQUIRE_COMPLETED_PENDING_ASSIGNMENTS" ]]; then
  PAYLOAD="{\"user\":\"$COMMITTER_EMAIL\",\"hasCompletedPendingAssignments\":true}"
  REQUIREMENT_NAME="completed pending assignments"
elif [[ -n "$REQUIRE_NOT_EXPIRED_ASSIGNMENTS" ]]; then
  PAYLOAD="{\"user\":\"$COMMITTER_EMAIL\",\"hasNotExpiredAssignments\":true}"
  REQUIREMENT_NAME="no expired assignments"
fi

# Call SecureFlag API to verify assignment status
# Note: Using a generic endpoint, adjust to actual SecureFlag API endpoint for assignments
SECUREFLAG_API_ENDPOINT="${SECUREFLAG_API_ENDPOINT:-https://api.secureflag.com/rest/management/v2/users/assignments}"

echo "[secureflag-assignments] Verifying $REQUIREMENT_NAME for $COMMITTER_EMAIL"
response=$(curl -s \
  -H "Authorization: Bearer $SECUREFLAG_API_TOKEN" \
  -H "Content-Type: application/json" \
  -d "$PAYLOAD" \
  "$SECUREFLAG_API_ENDPOINT")

result=$(echo "$response" | jq -r '.result')
error=$(echo "$response" | jq -r '.error')
errorMsg=$(echo "$response" | jq -r '.errorMsg')

if [[ "$error" == "true" ]]; then
  if [[ "$errorMsg" == "EmptyUser" ]]; then
    echo "[secureflag-assignments] WARNING: skipping assignment verification, \"$COMMITTER_EMAIL\" is not a valid user in SecureFlag. Please ensure your email is registered, or export COMMITTER_EMAIL with a valid SecureFlag user email."
    exit 0
  else
    # If it's a generic API error, just log it and allow the commit
    echo "[secureflag-assignments] WARNING: skipping assignment verification, API returned $errorMsg"
    exit 0
  fi
elif [[ "$result" == "true" ]]; then
  echo "[secureflag-assignments] Assignment verification succeeded: \"$COMMITTER_EMAIL\" meets requirement: $REQUIREMENT_NAME"
  exit 0
else
  echo
  echo "[secureflag-assignments] ‚ùå Git action blocked. You must meet the following requirement before committing:"
  echo "- $REQUIREMENT_NAME"
  echo
  echo "Visit https://www.secureflag.com/ to view your assignments."
  exit 1
fi
